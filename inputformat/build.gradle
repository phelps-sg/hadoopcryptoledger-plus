apply plugin: 'java'
apply plugin: 'maven-publish'
apply plugin: 'signing'
apply plugin: 'jacoco'
apply plugin: 'org.owasp.dependencycheck'
apply plugin: 'info.solidsoft.pitest'

sourceCompatibility = 1.8
compileJava.options.encoding = 'UTF-8'

group = "com.mesonomics"
archivesBaseName = "hadoopcryptoledger-plus-fileformat"
version = "0.1"

jar {
    manifest {
        attributes 'Implementation-Title': 'hadoopcryptoledger-plus - Hadoop CryptoLedger Analytics Library - Inputformat',
                        'Implementation-Version': archiveVersion
    }
    baseName = archivesBaseName
}

repositories {
    mavenCentral()
}

jacocoTestReport {
    reports {
        xml.enabled true
        csv.enabled true
    }
}

configurations {
	umlDoclet
	provided
	integrationTestCompile.extendsFrom testCompile
    	integrationTestRuntime.extendsFrom testRuntime
}

eclipse {

  classpath {
    plusConfigurations += [ configurations.provided ]
  }
}

sourceSets {
    main.compileClasspath += configurations.provided
    test.compileClasspath += configurations.provided
    test.runtimeClasspath += configurations.provided
     integrationTest {
        java {
            compileClasspath += main.output + test.output + configurations.provided
            runtimeClasspath += main.output + test.output + configurations.provided
            srcDir file('src/integration-test/java')
        }
        resources.srcDir file('src/integration-test/resources')
    }
}

pitest {
    targetClasses = ['org.zuinnote.hadoop.bitcoin.format.common.BitcoinUtil','org.zuinnote.hadoop.bitcoin.format.common.BitcoinScriptPatternParser','org.zuinnote.hadoop.namecoin.format.common.NamecoinUtil','org.zuinnote.hadoop.ethereum.format.common.EthereumUtil']  //by default "${project.group}.*"
    targetTests = ['org.zuinnote.hadoop.bitcoin.format.common.BitcoinUtilTest','org.zuinnote.hadoop.bitcoin.format.common.BitcoinScriptPatternParserTest','org.zuinnote.hadoop.namecoin.format.common.NamecoinUtilTest','org.zuinnote.hadoop.ethereum.format.common.EthereumUtilTest']
    timestampedReports = false
    threads = 4
    outputFormats = ['XML', 'HTML']
}

javadoc.classpath += configurations.provided


task hadoopCryptoLedgerJavaDocs(type: Jar) {
  classifier = 'javadoc'
  from javadoc
}


task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

test {
    testLogging.showStandardStreams = true
    useJUnitPlatform()
}

artifacts {
    archives hadoopCryptoLedgerJavaDocs, sourcesJar
}

publishing {
    publications {
        maven(MavenPublication) {
//            groupId 'com.github.phelps-sg'
//            artifactId 'hadoopcryptoledger-plus-fileformat'
//            version '0.1'
            from components.java
        }
    }
}

dependencies {
    // uml doclet for using planuml in javadoc
    umlDoclet "nl.talsmasoftware:umldoclet:2.0.7"
    // bouncycastle libraries - only for Ethereum utility functions needed
    provided("org.bouncycastle:bcprov-ext-jdk15on:1.64")
    // hadoop libraries
   provided("org.apache.hadoop:hadoop-common:2.7.0")
   provided("org.apache.hadoop:hadoop-mapreduce-client-common:2.7.0")
   // log4j2
   provided("org.apache.logging.log4j:log4j-api:2.12.1")
   // test
    testCompile group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.5.2'
	testRuntime group: 'org.junit.jupiter', name: 'junit-jupiter-engine', version: '5.5.2'
    compile 'org.bitcoinj:bitcoinj-core:0.15.7'
}
